package cn.bjjoy.bms.setting.controller;import java.util.HashMap;import java.util.List;import java.util.Map;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Description;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.CrossOrigin;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import cn.bjjoy.bms.base.ResponseResult;import cn.bjjoy.bms.exception.ControllerException;import cn.bjjoy.bms.setting.persist.model.Declarationrecord;import cn.bjjoy.bms.setting.service.DeclarationrecordService;import cn.bjjoy.bms.util.DataUtils;import cn.bjjoy.bms.util.MapUtils;import cn.bjjoy.bms.util.PageUtils;import cn.bjjoy.bms.util.Response;import cn.bjjoy.bms.util.StringUtils;/** * 类描述   :  * 创建人	：system * 创建时间 ：2018-09-13 23:02:18 * @version 1.0 */@Controller@CrossOriginpublic class DeclarationrecordController extends BaseController {	@Autowired	private DeclarationrecordService declarationrecordService;	    @RequestMapping(value = "declarationrecord/index" )    public String index( ModelMap modelMap) {        return "/declare/index";    }			@Description("-添加")	@RequestMapping(value="declarationrecord/save")	public Response save(Declarationrecord declarationrecord) throws ControllerException {		declarationrecordService.save(declarationrecord);		return Response.success(declarationrecord.getId());	}		@Description("-删除")	@RequestMapping(value="declarationrecord/delete")	public Response delete(String id) throws ControllerException {		if(StringUtils.isEmpty(id))			return Response.error("id不能为空");		declarationrecordService.deleteOne(id);		return Response.success();	}	@Description("-根据主键查询")	@RequestMapping(value="declarationrecord/one")	public Response one(String id) throws ControllerException {		if(StringUtils.isEmpty(id))			return Response.error("id不能为空");		Declarationrecord declarationrecord = declarationrecordService.queryOne(id);		return Response.success(declarationrecord);	}		@Description("-查询列表")	@RequestMapping(value="declarationrecord/list")	@SuppressWarnings({ "rawtypes", "unchecked" })	@ResponseBody	public ResponseResult getNewestData( @RequestParam Map map ,  ModelMap modelMap) throws ControllerException {				Integer rows = Integer.valueOf((String) map.get("rows")) ;		Integer page = Integer.valueOf((String) map.get("page")) ;		map.put("page", (page - 1) * rows );		map.put("rows",rows);		boolean pageOK = PageUtils.isOK(map);		if(!pageOK)			return ResponseResult.error();				map.put("sort", "addTime");		map.put("order", "asc");				List<Map<String, Object>> equips = declarationrecordService.queryMapList(map);		List<Declarationrecord> declares = DataUtils.getDataArray(equips, Declarationrecord.class);		long count = declarationrecordService.queryMapListCount(map);        Map<String, Object> responseResult = new HashMap<>();        responseResult.put("declares",declares);        responseResult.put("count",count);        return ResponseResult.ok(responseResult);	}		@Description("-根据主键修改")	@RequestMapping(value="declarationrecord/update")	public Response update(@RequestParam Map<String, Object> map) throws ControllerException {		if(MapUtils.isEmpty(map, "id"))			return Response.error("id不能为空");		declarationrecordService.updateOne(map);		return Response.success();	}}