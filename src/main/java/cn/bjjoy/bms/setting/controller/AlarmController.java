package cn.bjjoy.bms.setting.controller;import java.util.List;import java.util.Map;import org.apache.logging.log4j.LogManager;import org.apache.logging.log4j.Logger;import org.springframework.context.annotation.Description;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.CrossOrigin;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import cn.bjjoy.bms.exception.ControllerException;import cn.bjjoy.bms.setting.persist.model.Alarm;import cn.bjjoy.bms.util.MapUtils;import cn.bjjoy.bms.util.Page;import cn.bjjoy.bms.util.PageUtils;import cn.bjjoy.bms.util.Response;import cn.bjjoy.bms.util.StringUtils;/** * 类描述   :  * 创建人	：system * 创建时间 ：2018-09-13 23:02:17 * @version 1.0 */@CrossOrigin@RestController@RequestMapping(value="alarm")public class AlarmController extends AbstractHosznController {	private static final Logger logger = LogManager.getLogger();	    @RequestMapping(value = "/index" )    public String index( ModelMap modelMap) {        return "/alarm/index";    }		@Description("-添加")	@RequestMapping(value="save")	public Response save(Alarm alarm) throws ControllerException {		alarmService.save(alarm);		logger.info("save alarm");		return Response.success(alarm.getId());	}		@Description("-删除")	@RequestMapping(value="delete")	public Response delete(String id) throws ControllerException {		if(StringUtils.isEmpty(id))			return Response.error("id不能为空");		alarmService.deleteOne(id);		logger.info("del alarm");		return Response.success();	}	@Description("-根据主键查询")	@RequestMapping(value="one")	public Response one(String id) throws ControllerException {		if(StringUtils.isEmpty(id))			return Response.error("id不能为空");		Alarm alarm = alarmService.queryOne(id);		logger.info("根据主键查询 alarm");		return Response.success(alarm);	}		@Description("-查询列表")	@RequestMapping(value="list")	public Response list(@RequestParam Map<String, Object> map) throws ControllerException {		boolean pageOK = PageUtils.isOK(map);				if(!pageOK)			return Response.error("分页参数错误");				long total = alarmService.queryMapListCount(map);				Page page = PageUtils.initPage(map, total);				List<Map<String,Object>> list = alarmService.queryMapList(map);		return Response.success(list, page);	}		@Description("-根据主键修改")	@RequestMapping(value="update")	public Response update(@RequestParam Map<String, Object> map) throws ControllerException {		if(MapUtils.isEmpty(map, "id"))			return Response.error("id不能为空");		alarmService.updateOne(map);		return Response.success();	}}