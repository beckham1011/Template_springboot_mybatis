package cn.bjjoy.bms.setting.controller;import java.util.HashMap;import java.util.LinkedList;import java.util.List;import java.util.Map;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Description;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.bind.annotation.RestController;import cn.bjjoy.bms.base.ResponseResult;import cn.bjjoy.bms.exception.ControllerException;import cn.bjjoy.bms.setting.dto.EquiptypeDto;import cn.bjjoy.bms.setting.persist.model.Equiptype;import cn.bjjoy.bms.setting.service.EquiptypeService;import cn.bjjoy.bms.util.DataUtils;import cn.bjjoy.bms.util.MapUtils;import cn.bjjoy.bms.util.Response;import cn.bjjoy.bms.util.StringUtils;/** * 类描述   :  * 创建人	：system * 创建时间 ：2018-09-13 23:02:18 * @version 1.0 */@RestControllerpublic class EquiptypeController extends BaseController {	@Autowired	private EquiptypeService equiptypeService;		@Description("-添加")	@RequestMapping(value="equiptype/save")	public Response save(Equiptype equiptype) throws ControllerException {		equiptypeService.save(equiptype);		return Response.success(equiptype.getId());	}		@Description("-删除")	@RequestMapping(value="equiptype/delete")	public Response delete(String id) throws ControllerException {		if(StringUtils.isEmpty(id))			return Response.error("id不能为空");		equiptypeService.deleteOne(id);		return Response.success();	}	@Description("-根据主键查询")	@RequestMapping(value="equiptype/one")	public Response one(String id) throws ControllerException {		if(StringUtils.isEmpty(id))			return Response.error("id不能为空");		Equiptype equiptype = equiptypeService.queryOne(id);		return Response.success(equiptype);	}		@Description("-查询列表")	@RequestMapping(value="equiptype/list")	@ResponseBody	public ResponseResult getNewestData(@RequestParam Map map) throws ControllerException {		//		Integer rows = Integer.valueOf((String) map.get("rows")) ;//		Integer page = Integer.valueOf((String) map.get("page")) ;//		map.put("page", (page - 1) * rows );//		map.put("rows",rows);				List<Map<String, Object>> types = equiptypeService.getListNoPage(map) ;		System.out.println(types.size());				List<EquiptypeDto> typeList = DataUtils.getDataArray(types, EquiptypeDto.class);		long count = equiptypeService.queryMapListCount(map);        Map<String, Object> responseResult = new HashMap<>();        responseResult.put("typeList",typeList);        responseResult.put("count",count);        return ResponseResult.ok(responseResult);	}			@Description("-查询列表")	@RequestMapping(value="equiptype/subTypelist")	@ResponseBody	public ResponseResult subTypelist(@RequestParam Map map) throws ControllerException {		List<Map<String, Object>> types = equiptypeService.getSubType(map) ;		LinkedList<EquiptypeDto> subTypeList = DataUtils.getDataArray(types, EquiptypeDto.class);		if(map.get("parentId") == null || "0".equals(map.get("parentId"))){			EquiptypeDto rootType = new EquiptypeDto();			rootType.setName("智慧抄表云平台");			subTypeList.addFirst(rootType);		}        Map<String, Object> responseResult = new HashMap<>();        responseResult.put("subTypeList" ,subTypeList);        return ResponseResult.ok(responseResult);	}		@Description("-根据主键修改")	@RequestMapping(value="equiptype/update")	public Response update(@RequestParam Map<String, Object> map) throws ControllerException {		if(MapUtils.isEmpty(map, "id"))			return Response.error("id不能为空");		equiptypeService.updateOne(map);		return Response.success();	}}